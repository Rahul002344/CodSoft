{"ast":null,"code":"var _jsxFileName = \"D:\\\\codsoft1\\\\quiz-maker\\\\client\\\\src\\\\quizForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizForm() {\n  _s();\n  const [quizData, setQuizData] = useState({\n    title: '',\n    category: 'general',\n    question: '',\n    answers: ['', '', '', ''],\n    correctAnswer: ''\n  });\n  const handleChange = e => {\n    setQuizData({\n      ...quizData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Send quiz data to backend\n    try {\n      const response = await fetch('http://localhost:5000/api/quiz/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(quizData)\n      });\n      const result = await response.json();\n      if (result.success) {\n        alert('Quiz created successfully!');\n      } else {\n        alert('Error creating quiz.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Your Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: quizData.title,\n        onChange: handleChange,\n        placeholder: \"Quiz Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"category\",\n        value: quizData.category,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"general\",\n          children: \"General Knowledge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"science\",\n          children: \"Science\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"history\",\n          children: \"History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"question\",\n        value: quizData.question,\n        onChange: handleChange,\n        placeholder: \"Enter question\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), quizData.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: `answer${index + 1}`,\n        value: quizData.answers[index],\n        onChange: e => {\n          const newAnswers = [...quizData.answers];\n          newAnswers[index] = e.target.value;\n          setQuizData({\n            ...quizData,\n            answers: newAnswers\n          });\n        },\n        placeholder: `Answer ${index + 1}`,\n        required: true\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"correctAnswer\",\n        value: quizData.correctAnswer,\n        onChange: handleChange,\n        required: true,\n        children: quizData.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: `answer${index + 1}`,\n          children: answer\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizForm, \"5NYaWWnhHRz/bRFkhL51Xc+yYQ4=\");\n_c = QuizForm;\nexport default QuizForm;\nvar _c;\n$RefreshReg$(_c, \"QuizForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuizForm","_s","quizData","setQuizData","title","category","question","answers","correctAnswer","handleChange","e","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","success","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","required","map","answer","index","newAnswers","_c","$RefreshReg$"],"sources":["D:/codsoft1/quiz-maker/client/src/quizForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction QuizForm() {\r\n  const [quizData, setQuizData] = useState({\r\n    title: '',\r\n    category: 'general',\r\n    question: '',\r\n    answers: ['', '', '', ''],\r\n    correctAnswer: ''\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setQuizData({\r\n      ...quizData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // Send quiz data to backend\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/quiz/create', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(quizData),\r\n      });\r\n      const result = await response.json();\r\n      if (result.success) {\r\n        alert('Quiz created successfully!');\r\n      } else {\r\n        alert('Error creating quiz.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-form\">\r\n      <h1>Create Your Quiz</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={quizData.title}\r\n          onChange={handleChange}\r\n          placeholder=\"Quiz Title\"\r\n          required\r\n        />\r\n        <select\r\n          name=\"category\"\r\n          value={quizData.category}\r\n          onChange={handleChange}\r\n        >\r\n          <option value=\"general\">General Knowledge</option>\r\n          <option value=\"science\">Science</option>\r\n          <option value=\"history\">History</option>\r\n        </select>\r\n        <input\r\n          type=\"text\"\r\n          name=\"question\"\r\n          value={quizData.question}\r\n          onChange={handleChange}\r\n          placeholder=\"Enter question\"\r\n          required\r\n        />\r\n        {quizData.answers.map((answer, index) => (\r\n          <input\r\n            key={index}\r\n            type=\"text\"\r\n            name={`answer${index + 1}`}\r\n            value={quizData.answers[index]}\r\n            onChange={(e) => {\r\n              const newAnswers = [...quizData.answers];\r\n              newAnswers[index] = e.target.value;\r\n              setQuizData({ ...quizData, answers: newAnswers });\r\n            }}\r\n            placeholder={`Answer ${index + 1}`}\r\n            required\r\n          />\r\n        ))}\r\n        <select\r\n          name=\"correctAnswer\"\r\n          value={quizData.correctAnswer}\r\n          onChange={handleChange}\r\n          required\r\n        >\r\n          {quizData.answers.map((answer, index) => (\r\n            <option key={index} value={`answer${index + 1}`}>\r\n              {answer}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button type=\"submit\">Create Quiz</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IACvCO,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,SAAS;IACnBC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACzBC,aAAa,EAAE;EACjB,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BP,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACQ,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAC5B,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB;IACA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACpB,QAAQ;MAC/B,CAAC,CAAC;MACF,MAAMqB,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACpC,IAAID,MAAM,CAACE,OAAO,EAAE;QAClBC,KAAK,CAAC,4BAA4B,CAAC;MACrC,CAAC,MAAM;QACLA,KAAK,CAAC,sBAAsB,CAAC;MAC/B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBACE5B,OAAA;IAAK8B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB/B,OAAA;MAAA+B,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBnC,OAAA;MAAMoC,QAAQ,EAAErB,YAAa;MAAAgB,QAAA,gBAC3B/B,OAAA;QACEqC,IAAI,EAAC,MAAM;QACXxB,IAAI,EAAC,OAAO;QACZC,KAAK,EAAEX,QAAQ,CAACE,KAAM;QACtBiC,QAAQ,EAAE5B,YAAa;QACvB6B,WAAW,EAAC,YAAY;QACxBC,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFnC,OAAA;QACEa,IAAI,EAAC,UAAU;QACfC,KAAK,EAAEX,QAAQ,CAACG,QAAS;QACzBgC,QAAQ,EAAE5B,YAAa;QAAAqB,QAAA,gBAEvB/B,OAAA;UAAQc,KAAK,EAAC,SAAS;UAAAiB,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClDnC,OAAA;UAAQc,KAAK,EAAC,SAAS;UAAAiB,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxCnC,OAAA;UAAQc,KAAK,EAAC,SAAS;UAAAiB,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACTnC,OAAA;QACEqC,IAAI,EAAC,MAAM;QACXxB,IAAI,EAAC,UAAU;QACfC,KAAK,EAAEX,QAAQ,CAACI,QAAS;QACzB+B,QAAQ,EAAE5B,YAAa;QACvB6B,WAAW,EAAC,gBAAgB;QAC5BC,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,EACDhC,QAAQ,CAACK,OAAO,CAACiC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAClC3C,OAAA;QAEEqC,IAAI,EAAC,MAAM;QACXxB,IAAI,EAAE,SAAS8B,KAAK,GAAG,CAAC,EAAG;QAC3B7B,KAAK,EAAEX,QAAQ,CAACK,OAAO,CAACmC,KAAK,CAAE;QAC/BL,QAAQ,EAAG3B,CAAC,IAAK;UACf,MAAMiC,UAAU,GAAG,CAAC,GAAGzC,QAAQ,CAACK,OAAO,CAAC;UACxCoC,UAAU,CAACD,KAAK,CAAC,GAAGhC,CAAC,CAACC,MAAM,CAACE,KAAK;UAClCV,WAAW,CAAC;YAAE,GAAGD,QAAQ;YAAEK,OAAO,EAAEoC;UAAW,CAAC,CAAC;QACnD,CAAE;QACFL,WAAW,EAAE,UAAUI,KAAK,GAAG,CAAC,EAAG;QACnCH,QAAQ;MAAA,GAVHG,KAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWX,CACF,CAAC,eACFnC,OAAA;QACEa,IAAI,EAAC,eAAe;QACpBC,KAAK,EAAEX,QAAQ,CAACM,aAAc;QAC9B6B,QAAQ,EAAE5B,YAAa;QACvB8B,QAAQ;QAAAT,QAAA,EAEP5B,QAAQ,CAACK,OAAO,CAACiC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAClC3C,OAAA;UAAoBc,KAAK,EAAE,SAAS6B,KAAK,GAAG,CAAC,EAAG;UAAAZ,QAAA,EAC7CW;QAAM,GADIC,KAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTnC,OAAA;QAAQqC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACjC,EAAA,CAlGQD,QAAQ;AAAA4C,EAAA,GAAR5C,QAAQ;AAoGjB,eAAeA,QAAQ;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}